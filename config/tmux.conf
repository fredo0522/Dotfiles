#
# Bindings
#

# Set prefix to space.
unbind-key C-b
set-option -g prefix C-Space

# Open new/split panes with the path of the current pane.
unbind-key c
bind-key c new-window -c '#{pane_current_path}'

# Close windows TODO: Search how to change binding for close a split or window


# Smart pane switching with awareness of vim splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"

# Resizing (mouse also works).
unbind-key Left
bind-key -r Left resize-pane -L 5
unbind-key Right
bind-key -r Right resize-pane -R 5
unbind-key Down
bind-key -r Down resize-pane -D 5
unbind-key Up
bind-key -r Up resize-pane -U 5

# Intuitive window-splitting keys.
bind-key "\\" split-window -h -c '#{pane_current_path}' # normally prefix-%
bind-key "-" split-window -v -c '#{pane_current_path}' # normally prefix-"

# Status bar
set-option -g status-style 'bg=#303030 fg=#4A4A4A,bold,italics'
set-option -g status-left-length 40
set-option -g status-left '#[fg=yellow,bold,italics]#S ยง ' # SECTION SIGN (UTF-8: c2 a7)

set-option -g status-right "#[fg=yellow,bold,italics]$USER@#h #[fg=magenta]%l:%M %p "
set-option -g status-interval 60 # Default is 15.

# Automatically renumber window numbers on closing a pane (tmux >= 1.7).
set-option -g renumber-windows on

# Highlight active window.
setw -g window-status-current-style fg="#212121",bg="#ff6f60"

set-option -w -g xterm-keys on

# Mouse can be used to select panes, select windows (by clicking on the status
# bar), resize panes. For default bindings see `tmux list-keys`.
set-option -g mouse on

# Slightly more useful width in "main-vertical" layout; enough room for 3-digit
# line number gutter in Vim + 80 columns of text + 1 column breathing room
# (default looks to be about 79).
set-option -w -g main-pane-width 85

set -g default-terminal "tmux-256color"
set-option -ga terminal-overrides ',*256col*:Tc'

# Start window and pane numbering at 1, (0 is too hard to reach).
set-option -g base-index 1
set-option -g pane-base-index 1

# Don't wait for an escape sequence after seeing C-Space.
set-option -s escape-time 0

# Needed as on tmux 1.9 and up (defaults to off).
# Added in tmux commit c7a121cfc0137c907b7bfb.
set-option -g focus-events on

# Don't wrap searches; it's super confusing given tmux's reverse-ordering of
# position info in copy mode.
set-option -w -g wrap-search off

# - #S = session name
# - #T = pane title (~/.zshrc sets this to the last/current command)
set-option -g set-titles-string "#S > #T"

# Show bells in window titles.
set-option -g window-status-bell-style fg=yellow,bold,underscore

# Turn off distracting border highlight.
set-option -ga pane-active-border-style bg=default,fg=default

# Add : to the default list (" -_@") of word separators.
set-option -ga word-separators :/

# Make sure we always start at 1, even when invoked from a .tmux wrapper script.
set-environment -g SHLVL 1

#
# Copy mode
#

# Move between panes on copy-mode
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R

# See the history of copy things
unbind-key b
bind-key b choose-buffer

# Prompt of search
bind-key -T copy-mode-vi / command-prompt -i -p "search down" "send -X search-forward-incremental \"%%%\""
bind-key -T copy-mode-vi ? command-prompt -i -p "search up" "send -X search-backward-incremental \"%%%\""

# Exit on copy-mode
bind-key -T copy-mode-vi Escape send-keys -X cancel
 # Yank what is selected
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -se c -i"
# Start selection
bind-key -T copy-mode-vi v send-keys -X begin-selection
# Start selection in a block (Important to use Space after the bind)
bind-key -T copy-mode-vi 'C-v' send-keys -X rectangle-toggle
# Paste what is selected
bind-key p paste-buffer

# If it is on weird character appears when you copy something on copy-mode
set -s set-clipboard off

# Copy on clipbard with mouse
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -se c -i"

